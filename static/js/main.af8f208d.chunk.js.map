{"version":3,"sources":["components/app-header/app-header.js","components/app-header/index.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/post-status-filter/index.js","components/post-status-filter/post-status-filter.js","components/post-list-item/index.js","components/post-list-item/post-list-item.js","components/post-list/index.js","components/post-list/post-list.js","components/post-add-form/post-add-form.js","components/app/app.js","components/app/index.js","index.js"],"names":["Header","styled","div","props","colored","AppHeader","liked","allPosts","SearchPanel","state","term","onUpdateSearch","bind","e","target","value","this","setState","className","type","placeholder","onChange","Component","PostStatusFilter","buttons","name","label","btnClass","map","filter","onFilterSelect","clazz","onClick","PostListItem","event","closest","classList","add","onDelete","onToggleImportant","onToggleLiked","classNames","important","like","deleteAnimation","PostList","posts","elements","el","id","elProps","ListGroup","PostAddForm","text","onValueChange","onSubmit","preventDefault","onAdd","AppBlock","StyledAppBlock","App","data","deleteItem","addItem","maxId","setTimeout","index","findIndex","before","slice","after","body","newItem","old","items","length","item","includes","visiblePosts","filterPosts","searchPost","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af8f208d.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./app-header.css\";\nimport styled from \"styled-components\";\n\nconst Header = styled.div`\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n  h1 {\n    font-size: 26px;\n    color: ${props => props.colored ? 'red' : 'black'};\n    transition: all.3s ease;\n    :hover {\n      color: azure;\n    }\n  }\n  h2 {\n    font-size: 1.2rem;\n    color: whitesmoke;\n  }\n`;\nconst AppHeader = ({liked, allPosts}) => {\n  return (\n    <Header>\n      <h1>Andrey Kudinov</h1>\n      <h2>{allPosts} записей, из них понравилось {liked}</h2>\n    </Header>\n  );\n};\n\nexport default AppHeader;\n","import AppHeader from \"./app-header\";\nexport default AppHeader","import SearchPanel from \"./search-panel\";\nexport default SearchPanel","import React, { Component } from \"react\";\n\nimport \"./search-panel.css\";\n\nexport default class SearchPanel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      term: \"\",\n    };\n    this.onUpdateSearch = this.onUpdateSearch.bind(this);\n  }\n\n  onUpdateSearch(e){\n    const term = e.target.value\n    this.setState({term});\n    this.props.onUpdateSearch(term);\n  }\n\n  render() {\n    return (\n      <input\n        className=\"form-control search-input\"\n        type=\"text\"\n        placeholder=\"Поиск по записям\"\n        onChange={this.onUpdateSearch}\n      />\n    );\n  }\n}\n","import PostStatusFilter from \"./post-status-filter\";\nexport default PostStatusFilter","import React, { Component } from \"react\";\nimport { Button } from \"reactstrap\";\n\nimport \"./post-status-filter.css\";\n\nexport default class PostStatusFilter extends Component {\n  constructor(props) {\n    super(props);\n    this.buttons = [\n      { name: \"all\", label: \"Все\", btnClass: \"btn-info\" },\n      { name: \"like\", label: \"Понравилось\", btnClass: \"btn-outline-secondary\" },\n    ];\n  }\n  render() {\n    const buttons = this.buttons.map(({ name, label, btnClass }) => {\n      const {filter, onFilterSelect} = this.props\n      const active = filter === name; // без деструктуризация this.props.filter\n      const clazz = active ? \"btn-info\" : \"btn-outline-secondary\";\n\n      return (\n        <button\n          key={name}\n          type=\"btn\"\n          className={`btn ${clazz}`}\n          onClick={() => onFilterSelect(name)}\n        >\n          {label}\n        </button>\n      );\n    });\n\n    return (\n      <div className=\"btn-group\">\n        {/* <Button color='info'>Все</Button> */}\n        {buttons}\n      </div>\n    );\n  }\n}\n","import PostListItem from \"./post-list-item\";\nexport default PostListItem","import React, { Component } from \"react\";\n\nimport \"./post-list-item.css\";\n\nexport default class PostListItem extends Component {\n\n  deleteAnimation(event) {\n    event.target.closest('.list-group-item').classList.add('deleted')\n  }\n\n  render() {\n    const { label, onDelete, onToggleImportant, onToggleLiked, important, like } = this.props;\n    let classNames = \"app-list-item d-flex justify-content-between\";\n    if (!important) {\n      classNames += \" important\";\n    }\n    if (like) {\n      classNames += \" like\";\n    }\n    \n    return (\n      <div className={classNames}>\n        <span className=\"app-list-item-label\" onClick={onToggleLiked}>\n          {label}\n        </span>\n        <div className=\"d0-flex justify-content align-items-center\">\n          <button\n            type=\"button\"\n            className=\"btn-star btn-sm\"\n            onClick={onToggleImportant}\n          >\n            <span className=\"material-icons\">grade</span>\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn-trash btn-sm\"\n            onClick={(event) => {\n              onDelete();\n              this.deleteAnimation(event);\n            }}\n          >\n            <span className=\"material-icons\">delete</span>\n          </button>\n          <span className=\"material-icons fa-heart\">favorite</span>\n        </div>\n      </div>\n    );\n  }\n}\n\n// const PostListItem = ({label, important = false }) => {\n//   let classNames = \"app-list-item d-flex justify-content-between\";\n//     if (important) {\n//       classNames += \" important\";\n//     }\n//   return (\n//     <div className={classNames}>\n//         <span className=\"app-list-item-label\">{label}</span>\n//         <div className=\"d0-flex justify-content align-items-center\">\n//           <button type=\"button\" className=\"btn-star btn-sm\">\n//             <span className=\"material-icons\">grade</span>\n//           </button>\n//           <button type=\"button\" className=\"btn-trash btn-sm\">\n//             <span className=\"material-icons\">delete</span>\n//           </button>\n//           <span className=\"material-icons fa-heart\">favorite</span>\n//         </div>\n//       </div>\n//   );\n// };\n\n// export default PostListItem;\n","import PostList from \"./post-list\";\nexport default PostList","import React from \"react\";\n\nimport PostListItem from \"../post-list-item\";\nimport { ListGroup } from \"reactstrap\";\n\nimport \"./post-list.css\";\n\nconst PostList = ({ posts, onDelete, onToggleImportant, onToggleLiked }) => {\n  const elements = posts.map((el) => {\n    const { id, ...elProps } = el;\n    return (\n      <li key={id} className=\"list-group-item\">\n        {/* <PostListItem label={el.label} important={el.important}/> */}\n        <PostListItem\n          {...elProps}\n          onDelete={() => onDelete(id)}\n          onToggleImportant={() => onToggleImportant(id)}\n          onToggleLiked={() => onToggleLiked(id)}\n        />\n      </li>\n    );\n  });\n\n  return <ListGroup className=\"app-list\">{elements}</ListGroup>;\n};\n\nexport default PostList;\n","import React, { Component } from \"react\";\n\nimport \"./post-add-form.css\";\n\nexport default class PostAddForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: \"\",\n    };\n    this.onValueChange = this.onValueChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onValueChange(e) {\n    this.setState({\n      text: e.target.value,\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault()\n    this.props.onAdd(this.state.text)\n    this.setState({\n      text: ''\n    })\n  }\n\n  render() {\n    return (\n      <form className=\"bottom-panel d-flex\" onSubmit={this.onSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"О чем вы думаете сейчас?\"\n          className=\"form-control new-post-label\"\n          onChange={this.onValueChange}\n          value={this.state.text}\n        />\n        <button type=\"submit\" className=\"btn btn-outline-secondary\">\n          Добавить\n        </button>\n      </form>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport AppHeader from \"../app-header\";\nimport SearchPanel from \"../search-panel\";\nimport PostStatusFilter from \"../post-status-filter\";\nimport PostList from \"../post-list\";\nimport PostAddForm from \"../post-add-form/post-add-form\";\n\nimport \"./app.css\";\nimport styled from \"styled-components\";\n\nconst AppBlock = styled.div`\n  display: grid;\n  grid-template-columns:\n    [full-start] minmax(1em, 1fr)\n    [main-start] minmax(0, 50rem)\n    [main-end] minmax(1em, 1fr)\n    [full-end];\n  & * {\n    grid-column: main;\n  }\n`;\n\nconst StyledAppBlock = styled(AppBlock)`\n  padding-top: 20px;\n`;\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [\n        { label: \"Going to learn React\", important: false, like: false, id: 1 },\n        { label: \"This is so good\", important: true, like: false, id: 2 },\n        { label: \"I need a break...\", important: false, like: false, id: 3 },\n      ],\n      term: \"\",\n      filter: \"all\",\n    };\n    this.deleteItem = this.deleteItem.bind(this);\n    this.addItem = this.addItem.bind(this);\n    this.onToggleImportant = this.onToggleImportant.bind(this);\n    this.onToggleLiked = this.onToggleLiked.bind(this);\n    this.onUpdateSearch = this.onUpdateSearch.bind(this);\n    this.onFilterSelect = this.onFilterSelect.bind(this);\n\n    this.maxId = 4;\n  }\n\n  deleteItem(id) {\n    setTimeout(() => {\n      this.setState(({ data }) => {\n        const index = data.findIndex((el) => el.id === id);\n\n        const before = data.slice(0, index);\n        const after = data.slice(index + 1);\n\n        const newArr = [...before, ...after];\n\n        return {\n          data: newArr,\n        };\n      });\n    }, 300);\n  }\n\n  addItem(body) {\n    const newItem = {\n      label: body,\n      important: false,\n      id: this.maxId++,\n    };\n    this.setState(({ data }) => {\n      const newArr = [...data, newItem];\n      return {\n        data: newArr,\n      };\n    });\n  }\n\n  onToggleImportant(id) {\n    this.setState(({ data }) => {\n      const index = data.findIndex((el) => el.id === id);\n      const old = data[index];\n      const newItem = { ...old, important: !old.important };\n\n      const before = data.slice(0, index);\n      const after = data.slice(index + 1);\n\n      const newArr = [...before, newItem, ...after];\n\n      return { data: newArr };\n    });\n  }\n\n  onToggleLiked(id) {\n    this.setState(({ data }) => {\n      const index = data.findIndex((el) => el.id === id);\n      const old = data[index];\n      const newItem = { ...old, like: !old.like };\n\n      const before = data.slice(0, index);\n      const after = data.slice(index + 1);\n\n      const newArr = [...before, newItem, ...after];\n\n      return { data: newArr };\n    });\n  }\n\n  searchPost(items, term) {\n    if (!term.length) {\n      return items;\n    }\n\n    return items.filter((item) => {\n      return item.label.includes(term);\n    });\n  }\n\n  filterPosts(items, filter) {\n    if (filter === \"like\") {\n      return items.filter((item) => item.like);\n    } else {\n      return items;\n    }\n  }\n\n  onUpdateSearch(term) {\n    this.setState({ term });\n  }\n\n  onFilterSelect(filter) {\n    this.setState({ filter });\n  }\n\n  render() {\n    // const data = this.state.data;\n    const { data, term, filter } = this.state;\n\n    const liked = data.filter((item) => item.like).length;\n    const allPosts = data.length;\n\n    const visiblePosts = this.filterPosts(this.searchPost(data, term), filter);\n\n    return (\n      <StyledAppBlock>\n        <AppHeader liked={liked} allPosts={allPosts} />\n        <div className=\"search-panel d-flex\">\n          <SearchPanel onUpdateSearch={this.onUpdateSearch} />\n          <PostStatusFilter\n            filter={filter}\n            onFilterSelect={this.onFilterSelect}\n          />\n        </div>\n        <PostList\n          posts={visiblePosts}\n          onDelete={this.deleteItem}\n          onToggleImportant={this.onToggleImportant}\n          onToggleLiked={this.onToggleLiked}\n        />\n        <PostAddForm onAdd={this.addItem} />\n      </StyledAppBlock>\n    );\n  }\n}\n\n/* \nconst App = () => {\n\n  const data = [\n    {label: 'Going to learn React', important: false, id: 'qwer'},\n    {label: 'This is so good', important: true, id: 'asdf'},\n    {label: 'I need a break...', important: false, id: 'zxcv'},\n  ]\n  \n  return (\n    <StyledAppBlock>\n      <AppHeader />\n      <div className=\"search-panel d-flex\">\n        <SearchPanel />\n        <PostStatusFilter />\n      </div>\n      <PostList posts={data} onDelete={id => console.log(id)}/>\n      <PostAddForm />\n    </StyledAppBlock>\n  );\n};\n\nexport default App; */\n","import App from \"./app\";\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './components/app/';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}